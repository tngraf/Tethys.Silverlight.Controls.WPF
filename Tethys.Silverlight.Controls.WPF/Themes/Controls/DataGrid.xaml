<!-- ========================================================================
// Tethys.Silverlight.Controls.WPF
// ==========================================================================
//
// A custom control library for WPF applications.
//
// ==========================================================================
// <copyright file="DataGrid.xaml" company="Tethys">
// Copyright  2015 by T. Graf
//            All rights reserved.
//            Licensed under the Apache License, Version 2.0.
//            Unless required by applicable law or agreed to in writing, 
//            software distributed under the License is distributed on an
//            "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
//            either express or implied. 
// </copyright>
// 
// System ... Microsoft .Net Framework 4.5. 
// Tools .... Microsoft Visual Studio 2013
//
// ======================================================================= -->
    
<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/Tethys.Silverlight.Controls.WPF;component/Themes/Theme.Light.xaml" />
    </ResourceDictionary.MergedDictionaries>
    
    <Style x:Key="{ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, 
        TypeInTargetAssembly={x:Type DataGrid}}" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Rectangle
                            x:Name="Border" 
                            Fill="{DynamicResource Button.Static.Background}" 
                            SnapsToDevicePixels="True"/>
                        <Polygon
                            x:Name="Arrow"
                            Fill="{DynamicResource Control.Foreground}"
                            HorizontalAlignment="Right"
                            Margin="8,8,3,3" 
                            Opacity="0.15"
                            Points="0,10 10,10 10,0" 
                            Stretch="Uniform" 
                            VerticalAlignment="Bottom"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter 
                                Property="Stroke"
                                TargetName="Border" 
                                Value="{DynamicResource Control.MouseOver}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter 
                                Property="Fill"
                                TargetName="Border" 
                                Value="{DynamicResource Control.Pressed}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter
                                Property="Visibility" 
                                TargetName="Arrow"
                                Value="Collapsed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="{x:Type DataGrid}">
        <Setter Property="Background" Value="{DynamicResource Button.Static.Background}"/>
        <Setter Property="Foreground" Value="{DynamicResource Control.Foreground}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource Control.Border.Default}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGrid}">
                    <Border 
                        BorderBrush="{TemplateBinding BorderBrush}" 
                        BorderThickness="{TemplateBinding BorderThickness}" 
                        Background="{TemplateBinding Background}" 
                        Padding="{TemplateBinding Padding}" 
                        SnapsToDevicePixels="True">
                        <ScrollViewer 
                            x:Name="DG_ScrollViewer" 
                            Focusable="false">
                            <ScrollViewer.Template>
                                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="*"/>
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>
                                        
                                        <Button 
                                            Command="{x:Static DataGrid.SelectAllCommand}" 
                                            Focusable="false" 
                                            Style="{DynamicResource {ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, 
                                              TypeInTargetAssembly={x:Type DataGrid}}}" 
                                            Visibility="{Binding HeadersVisibility, 
                                              ConverterParameter={x:Static DataGridHeadersVisibility.All}, 
                                              Converter={x:Static DataGrid.HeadersVisibilityConverter}, 
                                              RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" 
                                            Width="{Binding CellsPanelHorizontalOffset, 
                                              RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                        <DataGridColumnHeadersPresenter
                                            Grid.Row="0"
                                            x:Name="PART_ColumnHeadersPresenter" 
                                            Grid.Column="1" 
                                            Visibility="{Binding HeadersVisibility, 
                                              ConverterParameter={x:Static DataGridHeadersVisibility.Column}, 
                                              Converter={x:Static DataGrid.HeadersVisibilityConverter}, 
                                              RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                        <ScrollContentPresenter 
                                            Grid.Column="0"
                                            x:Name="PART_ScrollContentPresenter" 
                                            CanContentScroll="{TemplateBinding CanContentScroll}" 
                                            Grid.ColumnSpan="2"
                                            Grid.Row="1"/>
                                        <ScrollBar 
                                            x:Name="PART_VerticalScrollBar" 
                                            Grid.Column="2" 
                                            Maximum="{TemplateBinding ScrollableHeight}" 
                                            Orientation="Vertical" 
                                            Grid.Row="1" 
                                            Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" 
                                            Value="{Binding VerticalOffset, Mode=OneWay, 
                                              RelativeSource={RelativeSource TemplatedParent}}" 
                                            ViewportSize="{TemplateBinding ViewportHeight}"/>
                                        <Grid Grid.Column="1" Grid.Row="2">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, 
                                                    RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>
                                            <ScrollBar 
                                                x:Name="PART_HorizontalScrollBar" 
                                                Grid.Column="1" 
                                                Maximum="{TemplateBinding ScrollableWidth}" 
                                                Orientation="Horizontal"
                                                Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" 
                                                Value="{Binding HorizontalOffset, Mode=OneWay, 
                                                  RelativeSource={RelativeSource TemplatedParent}}" 
                                                ViewportSize="{TemplateBinding ViewportWidth}"/>
                                        </Grid>
                                    </Grid>
                                </ControlTemplate>
                            </ScrollViewer.Template>
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsGrouping" Value="true"/>
                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
            </MultiTrigger>
        </Style.Triggers>
    </Style>
    
    <Style TargetType="{x:Type DataGridCell}">
        <Setter Property="Background" Value="{DynamicResource Button.Static.Background}"/>
        <Setter Property="Foreground" Value="{DynamicResource Control.Foreground}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource Button.Static.Background}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Border
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}" 
                        Background="{TemplateBinding Background}" 
                        SnapsToDevicePixels="True">
                        <ContentPresenter
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter
                    Property="Background"
                    Value="{DynamicResource Control.AccentColor}"/>
                <Setter
                    Property="Foreground"
                    Value="{DynamicResource Control.HighlightedTextBrush}"/>
                <Setter
                    Property="BorderBrush" 
                    Value="{DynamicResource Control.AccentColor}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter
                    Property="Background"
                    Value="{DynamicResource Control.MouseOver}"/>
                <Setter
                    Property="BorderBrush" 
                    Value="{DynamicResource Control.MouseOver}"/>
            </Trigger>
            <!--
            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                <Setter
                    Property="BorderBrush" 
                    Value="{DynamicResource {x:Static DataGrid.FocusBorderBrushKey}}"/>
            </Trigger>
            -->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="true"/>
                    <Condition Property="Selector.IsSelectionActive" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter 
                    Property="Background" 
                    Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                <Setter 
                    Property="BorderBrush"
                    Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                <Setter 
                    Property="Foreground"
                    Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}"/>
            </MultiTrigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter 
                    Property="Foreground" 
                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style x:Key="ColumnHeaderGripperStyle" TargetType="{x:Type Thumb}">
        <Setter Property="Width" Value="8"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Cursor" Value="SizeWE"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border 
                        Background="{TemplateBinding Background}" 
                        Padding="{TemplateBinding Padding}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Background" Value="{DynamicResource Button.Static.Background}" />
        <Setter Property="Foreground" Value="{DynamicResource Control.Foreground}"/>
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                    <Grid>
                        <Border
                            x:Name="border"
                            BorderBrush="{DynamicResource Control.Border.Default}" 
                            BorderThickness="0,0,1,0"
                            Padding="{TemplateBinding Padding}" 
                            Background="{TemplateBinding Background}">
                            <Border
                                x:Name="leftBorder"
                                BorderBrush="Transparent"
                                BorderThickness="5,1,1,1"
                                Visibility="{TemplateBinding SeparatorVisibility}">

                                <Border
                                    x:Name="rightBorder"
                                    BorderBrush="{TemplateBinding SeparatorBrush}"
                                    BorderThickness="1,0,0,0"
                                    Visibility="{TemplateBinding SeparatorVisibility}">
                                    <ContentPresenter
                                        Margin="3,0,3,0"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                        RecognizesAccessKey="True" 
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </Border>
                            </Border>
                        </Border>
                        <Thumb
                            x:Name="PART_LeftHeaderGripper" 
                            HorizontalAlignment="Left"
                            Style="{StaticResource ColumnHeaderGripperStyle}"/>
                        <Thumb 
                            x:Name="PART_RightHeaderGripper" 
                            HorizontalAlignment="Right" 
                            Style="{StaticResource ColumnHeaderGripperStyle}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger 
                            Property="IsMouseOver"
                            Value="true">
                            <Setter 
                                Property="Background" 
                                TargetName="border" 
                                Value="{DynamicResource Control.MouseOver}"/>
                            <Setter 
                                Property="BorderBrush" 
                                TargetName="border" 
                                Value="{DynamicResource Control.Border.Default}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="CanUserSort" Value="true"/>
                                <Condition Property="IsPressed" Value="true"/>
                            </MultiTrigger.Conditions>
                            <Setter 
                                Property="Background" 
                                TargetName="border" 
                                Value="{DynamicResource Control.Pressed}"/>
                            <Setter 
                                Property="BorderBrush" 
                                TargetName="border" 
                                Value="{DynamicResource Control.Border.Default}"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>