<!-- ========================================================================
// Tethys.Silverlight.Controls.WPF
// ==========================================================================
//
// A custom control library for WPF applications.
//
// ==========================================================================
// <copyright file="ToggleButton.xaml" company="Tethys">
// Copyright  2015 by T. Graf
//            All rights reserved.
//            Licensed under the Apache License, Version 2.0.
//            Unless required by applicable law or agreed to in writing, 
//            software distributed under the License is distributed on an
//            "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
//            either express or implied. 
// </copyright>
// 
// System ... Microsoft .Net Framework 4.5. 
// Tools .... Microsoft Visual Studio 2013
//
// ======================================================================= -->
    
<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/Tethys.Silverlight.Controls.WPF;component/Themes/Theme.Light.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="ToggleButtonFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle
                        Margin="2"
                        SnapsToDevicePixels="true"
                        Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" 
                        StrokeThickness="1" 
                        StrokeDashArray="1 2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ToggleButton}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ToggleButtonFocusVisual}"/>
        <Setter Property="Background" Value="{DynamicResource Button.Static.Background}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource Button.Static.Border}"/>
        <Setter Property="Foreground" Value="{DynamicResource Control.Foreground}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border 
                        x:Name="border" 
                        BorderBrush="{TemplateBinding BorderBrush}" 
                        BorderThickness="{TemplateBinding BorderThickness}" 
                        Background="{TemplateBinding Background}" 
                        SnapsToDevicePixels="true">
                        <ContentPresenter
                            x:Name="contentPresenter" 
                            Focusable="False" 
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                            Margin="{TemplateBinding Padding}" 
                            RecognizesAccessKey="True" 
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter 
                                Property="Background" 
                                TargetName="border" 
                                Value="{DynamicResource Control.MouseOver}"/>
                            <Setter 
                                Property="BorderBrush" 
                                TargetName="border" 
                                Value="{DynamicResource Control.Border.Default}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter 
                                Property="Background" 
                                TargetName="border" 
                                Value="{DynamicResource Control.Pressed}"/>
                            <Setter 
                                Property="BorderBrush" 
                                TargetName="border" 
                                Value="{DynamicResource Control.Border.Highlighted}"/>
                            <Setter 
                                Property="Foreground" 
                                Value="{DynamicResource Control.HighlightedTextBrush}"/>
                        </Trigger>
                        <Trigger 
                            Property="IsEnabled" 
                            Value="false">
                            <Setter 
                                Property="Background" 
                                TargetName="border" 
                                Value="{DynamicResource Control.Disabled.Background}"/>
                            <Setter 
                                Property="BorderBrush" 
                                TargetName="border" 
                                Value="{DynamicResource Control.Disabled.Border}"/>
                            <Setter 
                                Property="TextElement.Foreground" 
                                TargetName="contentPresenter" 
                                Value="{DynamicResource Control.Disabled.Foreground}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter 
                                Property="Background"
                                TargetName="border" 
                                Value="{DynamicResource Control.Pressed}"/>
                            <Setter 
                                Property="BorderBrush" 
                                TargetName="border"
                                Value="{DynamicResource Control.Border.Highlighted}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>