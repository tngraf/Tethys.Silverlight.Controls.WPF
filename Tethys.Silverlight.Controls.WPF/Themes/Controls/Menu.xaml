<!-- ========================================================================
// Tethys.Silverlight.Controls.WPF
// ==========================================================================
//
// A custom control library for WPF applications.
//
// ==========================================================================
// <copyright file="Menu.xaml" company="Tethys">
// Copyright  2015 by T. Graf
//            All rights reserved.
//            Licensed under the Apache License, Version 2.0.
//            Unless required by applicable law or agreed to in writing, 
//            software distributed under the License is distributed on an
//            "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
//            either express or implied. 
// </copyright>
// 
// System ... Microsoft .Net Framework 4.5. 
// Tools .... Microsoft Visual Studio 2013
//
// ======================================================================= -->
    
 <ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/Tethys.Silverlight.Controls.WPF;component/Themes/Theme.Light.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Geometry x:Key="Checkmark">F1 M 10.0,1.2 L 4.7,9.1 L 4.5,9.1 L 0,5.2 L 1.3,3.5 L 4.3,6.1L 8.3,0 L 10.0,1.2 Z</Geometry>
    <Geometry x:Key="UpArrow">M 0,4 L 3.5,0 L 7,4 Z</Geometry>
    <Geometry x:Key="DownArrow">M 0,0 L 3.5,4 L 7,0 Z</Geometry>
    <Geometry x:Key="RightArrow">M 0,0 L 4,3.5 L 0,7 Z</Geometry>

    <MenuScrollingVisibilityConverter x:Key="MenuScrollingVisibilityConverter"/>

    <Style TargetType="{x:Type Menu}">
        <Setter Property="Background" Value="{DynamicResource MainBackgroundBrush}"/>
        <Setter Property="FontFamily" Value="{DynamicResource {x:Static SystemFonts.MenuFontFamilyKey}}"/>
        <Setter Property="FontSize" Value="{DynamicResource {x:Static SystemFonts.MenuFontSizeKey}}"/>
        <Setter Property="FontStyle" Value="{DynamicResource {x:Static SystemFonts.MenuFontStyleKey}}"/>
        <Setter Property="FontWeight" Value="{DynamicResource {x:Static SystemFonts.MenuFontWeightKey}}"/>
        <Setter Property="Foreground" Value="{DynamicResource Control.Foreground}"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="0,4,0,4" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Menu}">
                    <Border 
                        BorderBrush="{TemplateBinding BorderBrush}" 
                        BorderThickness="{TemplateBinding BorderThickness}" 
                        Background="{TemplateBinding Background}" 
                        Padding="{TemplateBinding Padding}" 
                        SnapsToDevicePixels="true">
                        <ItemsPresenter 
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <ControlTemplate x:Key="{ComponentResourceKey ResourceId=SubmenuItemTemplateKey, 
        TypeInTargetAssembly={x:Type MenuItem}}" TargetType="{x:Type MenuItem}">
        <Border 
            x:Name="templateRoot" 
            BorderBrush="{TemplateBinding BorderBrush}" 
            BorderThickness="{TemplateBinding BorderThickness}"
            Background="{TemplateBinding Background}"
            Height="22"
            SnapsToDevicePixels="true">
            <Grid Margin="-1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition 
                        MinWidth="22" 
                        SharedSizeGroup="MenuItemIconColumnGroup" Width="Auto"/>
                    <ColumnDefinition Width="13"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="30"/>
                    <ColumnDefinition 
                        SharedSizeGroup="MenuItemIGTColumnGroup" Width="Auto"/>
                    <ColumnDefinition Width="20"/>
                </Grid.ColumnDefinitions>
                <ContentPresenter 
                    x:Name="Icon" 
                    ContentSource="Icon" 
                    HorizontalAlignment="Center" 
                    Height="16" Width="16"
                    Margin="3" 
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                    VerticalAlignment="Center" />
                <Border 
                    x:Name="GlyphPanel" 
                    Grid.Column="0"
                    BorderBrush="{DynamicResource Control.Border.Default}" 
                    BorderThickness="1" 
                    Background="{DynamicResource Control.MouseOver}" 
                    ClipToBounds="False" 
                    HorizontalAlignment="Center" 
                    Height="22" Width="22"
                    Margin="-1,0,0,0" 
                    Visibility="Hidden" 
                    VerticalAlignment="Center">
                    <Path 
                        x:Name="Glyph" 
                        Data="{StaticResource Checkmark}" 
                        Fill="{DynamicResource Menu.Static.Foreground}" 
                        FlowDirection="LeftToRight" 
                        Height="11" Width="10"/>
                </Border>
                <ContentPresenter 
                    x:Name="menuHeaderContainer" 
                    Grid.Column="2" 
                    ContentSource="Header" 
                    HorizontalAlignment="Left" 
                    Margin="{TemplateBinding Padding}" 
                    RecognizesAccessKey="True" 
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                    VerticalAlignment="Center"/>
                <TextBlock 
                    x:Name="menuGestureText" 
                    Grid.Column="4" 
                    Margin="{TemplateBinding Padding}" 
                    Opacity="0.7" 
                    Foreground="{DynamicResource Control.Foreground}"
                    Text="{TemplateBinding InputGestureText}" 
                    VerticalAlignment="Center"/>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter 
                    Property="Background" 
                    TargetName="templateRoot" 
                    Value="{DynamicResource Control.MouseOver}"/>
                <Setter 
                    Property="BorderBrush" 
                    TargetName="templateRoot" 
                    Value="{DynamicResource Control.Border.Default}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter 
                    Property="TextElement.Foreground" 
                    TargetName="templateRoot"
                    Value="{DynamicResource Menu.Disabled.Foreground}"/>
                <Setter 
                    Property="Fill" 
                    TargetName="Glyph"
                    Value="{DynamicResource Menu.Disabled.Foreground}"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsHighlighted" Value="True"/>
                    <Condition Property="IsEnabled" Value="False"/>
                </MultiTrigger.Conditions>
                <Setter 
                    Property="Background" 
                    TargetName="templateRoot" 
                    Value="{DynamicResource MenuItem.Highlight.Disabled.Background}"/>
                
                <Setter 
                    Property="BorderBrush"
                    TargetName="templateRoot" 
                    Value="{DynamicResource MenuItem.Highlight.Disabled.Border}"/>
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    
    <Style x:Key="MenuScrollButton" BasedOn="{x:Null}" TargetType="{x:Type RepeatButton}">
        <Setter Property="ClickMode" Value="Hover"/>
        <Setter Property="Foreground" Value="{DynamicResource Control.Foreground}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border 
                        x:Name="templateRoot" 
                        BorderBrush="Transparent" 
                        BorderThickness="1"
                        Background="Transparent" 
                        SnapsToDevicePixels="true">
                        <ContentPresenter 
                            HorizontalAlignment="Center" 
                            Margin="6" 
                            VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="{ComponentResourceKey ResourceId=MenuScrollViewer, 
        TypeInTargetAssembly={x:Type FrameworkElement}}" BasedOn="{x:Null}" TargetType="{x:Type ScrollViewer}">
        <Setter Property="HorizontalScrollBarVisibility" Value="Hidden"/>
        <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="Foreground" Value="{DynamicResource Control.Foreground}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Border Grid.Column="0" Grid.Row="1">
                            <ScrollContentPresenter 
                                CanContentScroll="{TemplateBinding CanContentScroll}" 
                                Margin="{TemplateBinding Padding}"/>
                        </Border>
                        <RepeatButton 
                            Grid.Column="0" 
                            CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                            Command="{x:Static ScrollBar.LineUpCommand}" 
                            Focusable="false" 
                            Grid.Row="0"
                            Style="{StaticResource MenuScrollButton}">
                            <RepeatButton.Visibility>
                                <MultiBinding
                                    ConverterParameter="0" 
                                    Converter="{StaticResource MenuScrollingVisibilityConverter}" 
                                    FallbackValue="Visibility.Collapsed">
                                    <Binding Path="ComputedVerticalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}"/>
                                    <Binding Path="VerticalOffset" RelativeSource="{RelativeSource TemplatedParent}"/>
                                    <Binding Path="ExtentHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
                                    <Binding Path="ViewportHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
                                </MultiBinding>
                            </RepeatButton.Visibility>
                            <Path
                                Data="{StaticResource UpArrow}"
                                Fill="{DynamicResource Menu.Static.Foreground}"/>
                        </RepeatButton>
                        <RepeatButton 
                            Grid.Column="0" 
                            CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                            Command="{x:Static ScrollBar.LineDownCommand}" 
                            Focusable="false"
                            Grid.Row="2"
                            Style="{StaticResource MenuScrollButton}">
                            <RepeatButton.Visibility>
                                <MultiBinding 
                                    ConverterParameter="100" 
                                    Converter="{StaticResource MenuScrollingVisibilityConverter}"
                                    FallbackValue="Visibility.Collapsed">
                                    <Binding Path="ComputedVerticalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}"/>
                                    <Binding Path="VerticalOffset" RelativeSource="{RelativeSource TemplatedParent}"/>
                                    <Binding Path="ExtentHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
                                    <Binding Path="ViewportHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
                                </MultiBinding>
                            </RepeatButton.Visibility>
                            <Path 
                                Data="{StaticResource DownArrow}" 
                                Fill="{DynamicResource Menu.Static.Foreground}"/>
                        </RepeatButton>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <ControlTemplate x:Key="{ComponentResourceKey ResourceId=TopLevelHeaderTemplateKey, 
        TypeInTargetAssembly={x:Type MenuItem}}" TargetType="{x:Type MenuItem}">
        <Border
            x:Name="templateRoot" 
            BorderBrush="{TemplateBinding BorderBrush}" 
            BorderThickness="{TemplateBinding BorderThickness}"
            Background="{TemplateBinding Background}"
            SnapsToDevicePixels="true">
            <Grid VerticalAlignment="Center">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <ContentPresenter 
                    x:Name="Icon" 
                    ContentSource="Icon" 
                    HorizontalAlignment="Center" 
                    Height="16" Width="16"
                    Margin="3" 
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                    VerticalAlignment="Center"/>
                <Path 
                    x:Name="GlyphPanel" 
                    Grid.Column="0"
                    Data="{StaticResource Checkmark}" 
                    Fill="{TemplateBinding Foreground}" 
                    FlowDirection="LeftToRight" 
                    Margin="3" 
                    Visibility="Collapsed" 
                    VerticalAlignment="Center"/>
                <ContentPresenter 
                    Grid.Column="1" 
                    ContentSource="Header" 
                    Margin="{TemplateBinding Padding}" 
                    RecognizesAccessKey="True" 
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                <Popup 
                    x:Name="PART_Popup"
                    Grid.Column="0"
                    AllowsTransparency="true" 
                    Focusable="false" 
                    IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" 
                    PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" 
                    Placement="Bottom" 
                    PlacementTarget="{Binding ElementName=templateRoot}">
                    <Border 
                        x:Name="SubMenuBorder" 
                        BorderBrush="{DynamicResource Menu.Static.Border}" 
                        BorderThickness="1" 
                        Background="{DynamicResource Menu.Static.Background}" 
                        Padding="2">
                        <ScrollViewer 
                            x:Name="SubMenuScrollViewer" 
                            Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, 
                              TypeInTargetAssembly={x:Type FrameworkElement}}}">
                            <Grid RenderOptions.ClearTypeHint="Enabled">
                                <Canvas 
                                    HorizontalAlignment="Left" 
                                    Height="0" Width="0"
                                    VerticalAlignment="Top">
                                    <Rectangle 
                                        x:Name="OpaqueRect" 
                                        Fill="{Binding Background, ElementName=SubMenuBorder}" 
                                        Height="{Binding ActualHeight, ElementName=SubMenuBorder}" 
                                        Width="{Binding ActualWidth, ElementName=SubMenuBorder}"/>
                                </Canvas>
                                <Rectangle 
                                    Fill="{DynamicResource Menu.Static.Separator}" 
                                    Visibility="Collapsed"
                                    HorizontalAlignment="Left" 
                                    Margin="29,2,0,2" 
                                    Width="1"/>
                                <ItemsPresenter 
                                    x:Name="ItemsPresenter" 
                                    KeyboardNavigation.DirectionalNavigation="Cycle" 
                                    Grid.IsSharedSizeScope="true" 
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                    KeyboardNavigation.TabNavigation="Cycle"/>
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                <Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None"/>
            </Trigger>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="true">
                <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter Property="BorderBrush" 
                        TargetName="templateRoot" 
                        Value="{DynamicResource Control.Border.Default}"/>
                <Setter
                    Property="Background" 
                    TargetName="templateRoot" 
                    Value="{DynamicResource Control.MouseOver}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter 
                    Property="TextElement.Foreground" 
                    TargetName="templateRoot" 
                    Value="{DynamicResource Menu.Disabled.Foreground}"/>
                <Setter 
                    Property="Fill"
                    TargetName="GlyphPanel" 
                    Value="{DynamicResource Menu.Disabled.Foreground}"/>
            </Trigger>
            <Trigger 
                Property="ScrollViewer.CanContentScroll" 
                SourceName="SubMenuScrollViewer" 
                Value="false">
                <Setter 
                    Property="Canvas.Top" 
                    TargetName="OpaqueRect" 
                    Value="{Binding VerticalOffset, ElementName=SubMenuScrollViewer}"/>
                <Setter 
                    Property="Canvas.Left" 
                    TargetName="OpaqueRect" 
                    Value="{Binding HorizontalOffset, ElementName=SubMenuScrollViewer}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    
    <ControlTemplate x:Key="{ComponentResourceKey ResourceId=TopLevelItemTemplateKey,
        TypeInTargetAssembly={x:Type MenuItem}}" TargetType="{x:Type MenuItem}">
        <Border 
            x:Name="templateRoot" 
            BorderBrush="{TemplateBinding BorderBrush}" 
            BorderThickness="{TemplateBinding BorderThickness}" 
            Background="{TemplateBinding Background}" 
            SnapsToDevicePixels="true">
            <Grid VerticalAlignment="Center">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <ContentPresenter 
                    x:Name="Icon"
                    ContentSource="Icon"
                    HorizontalAlignment="Center" 
                    Height="16" Width="16"
                    Margin="3"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                    VerticalAlignment="Center"/>
                <Path 
                    x:Name="GlyphPanel"
                    Grid.Column="0"
                    Data="{StaticResource Checkmark}" 
                    Fill="{DynamicResource Menu.Static.Foreground}" 
                    FlowDirection="LeftToRight" 
                    Margin="3" 
                    Visibility="Collapsed" 
                    VerticalAlignment="Center"/>
                <ContentPresenter 
                    Grid.Column="1"
                    ContentSource="Header" 
                    Margin="{TemplateBinding Padding}" 
                    RecognizesAccessKey="True" 
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="true">
                <Setter
                    Property="Visibility"
                    TargetName="GlyphPanel"
                    Value="Visible"/>
                <Setter 
                    Property="Visibility" 
                    TargetName="Icon" 
                    Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter 
                    Property="Background" 
                    TargetName="templateRoot" 
                    Value="{DynamicResource Control.MouseOver}"/>
                <Setter 
                    Property="BorderBrush" 
                    TargetName="templateRoot" 
                    Value="{DynamicResource Menu.Static.Border}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter 
                    Property="TextElement.Foreground" 
                    TargetName="templateRoot" 
                    Value="{DynamicResource Menu.Disabled.Foreground}"/>
                <Setter 
                    Property="Fill" 
                    TargetName="GlyphPanel" 
                    Value="{DynamicResource Menu.Disabled.Foreground}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="True">
                <Setter 
                    Property="TextElement.Foreground" 
                    TargetName="templateRoot" 
                    Value="{DynamicResource Menu.Static.Foreground}"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsHighlighted" Value="True"/>
                    <Condition Property="IsEnabled" Value="False"/>
                </MultiTrigger.Conditions>
                <Setter 
                    Property="Background" 
                    TargetName="templateRoot" 
                    Value="{DynamicResource MenuItem.Highlight.Disabled.Background}"/>
                <Setter 
                    Property="BorderBrush" 
                    TargetName="templateRoot" 
                    Value="{DynamicResource MenuItem.Highlight.Disabled.Border}"/>
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    
    <ControlTemplate x:Key="{ComponentResourceKey ResourceId=SubmenuHeaderTemplateKey,
        TypeInTargetAssembly={x:Type MenuItem}}" TargetType="{x:Type MenuItem}">
        <Border 
            x:Name="templateRoot" 
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}" 
            Background="{TemplateBinding Background}"
            Height="22" 
            SnapsToDevicePixels="true">
            <Grid Margin="-1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition 
                        MinWidth="22"
                        SharedSizeGroup="MenuItemIconColumnGroup"
                        Width="Auto"/>
                    <ColumnDefinition Width="13"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="30"/>
                    <ColumnDefinition 
                        SharedSizeGroup="MenuItemIGTColumnGroup" 
                        Width="Auto"/>
                    <ColumnDefinition Width="20"/>
                </Grid.ColumnDefinitions>
                <ContentPresenter 
                    x:Name="Icon" 
                    ContentSource="Icon" 
                    HorizontalAlignment="Center" 
                    Height="16" Width="16"
                    Margin="3" 
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                    VerticalAlignment="Center" />
                <Border 
                    x:Name="GlyphPanel" 
                    Grid.Column="0"
                    BorderBrush="{DynamicResource Control.Border.Default}" 
                    BorderThickness="1" 
                    Background="{DynamicResource Control.MouseOver}" 
                    Height="22" 
                    Margin="-1,0,0,0" 
                    Visibility="Hidden" 
                    VerticalAlignment="Center"
                    Width="22">
                    <Path 
                        x:Name="Glyph" 
                        Data="{DynamicResource Checkmark}" 
                        Fill="{DynamicResource Menu.Static.Foreground}" 
                        FlowDirection="LeftToRight" 
                        Height="11" Width="9"/>
                </Border>
                <ContentPresenter 
                    Grid.Column="2" 
                    ContentSource="Header" 
                    HorizontalAlignment="Left" 
                    Margin="{TemplateBinding Padding}" 
                    RecognizesAccessKey="True" 
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                    VerticalAlignment="Center"/>
                <TextBlock
                    Grid.Column="4" 
                    Margin="{TemplateBinding Padding}" 
                    Opacity="0.7" 
                    Text="{TemplateBinding InputGestureText}" 
                    VerticalAlignment="Center"/>
                <Path x:Name="RightArrow" 
                      Grid.Column="5" 
                      Data="{StaticResource RightArrow}" 
                      Fill="{DynamicResource Menu.Static.Foreground}" 
                      HorizontalAlignment="Left" 
                      Margin="10,0,0,0" 
                      VerticalAlignment="Center"/>
                <Popup 
                    x:Name="PART_Popup"
                    Grid.Column="0"
                    AllowsTransparency="true" 
                    Focusable="false" 
                    HorizontalOffset="-2" 
                    IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" 
                    PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" 
                    Placement="Right" 
                    VerticalOffset="-3">
                    <Border x:Name="SubMenuBorder" 
                            BorderBrush="{DynamicResource Menu.Static.Border}" 
                            BorderThickness="1" 
                            Background="{DynamicResource Menu.Static.Background}" 
                            Padding="2">
                        <ScrollViewer 
                            x:Name="SubMenuScrollViewer" 
                            Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, 
                              TypeInTargetAssembly={x:Type FrameworkElement}}}">
                            <Grid RenderOptions.ClearTypeHint="Enabled">
                                <Canvas 
                                    HorizontalAlignment="Left" 
                                    Height="0" Width="0"
                                    VerticalAlignment="Top">
                                    <Rectangle 
                                        x:Name="OpaqueRect" 
                                        Fill="{Binding Background, ElementName=SubMenuBorder}" 
                                        Height="{Binding ActualHeight, ElementName=SubMenuBorder}" 
                                        Width="{Binding ActualWidth, ElementName=SubMenuBorder}"/>
                                </Canvas>
                                <Rectangle 
                                    Fill="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" 
                                    Visibility="Collapsed"
                                    HorizontalAlignment="Left" 
                                    Margin="29,2,0,2" 
                                    Width="1"/>
                                <ItemsPresenter 
                                    x:Name="ItemsPresenter" 
                                    KeyboardNavigation.DirectionalNavigation="Cycle" 
                                    Grid.IsSharedSizeScope="true" 
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                    KeyboardNavigation.TabNavigation="Cycle"/>
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                <Setter
                    Property="PopupAnimation" 
                    TargetName="PART_Popup" 
                    Value="None"/>
            </Trigger>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter
                    Property="Visibility"
                    TargetName="Icon"
                    Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter 
                    Property="Visibility" 
                    TargetName="GlyphPanel"
                    Value="Visible"/>
                <Setter 
                    Property="Visibility"
                    TargetName="Icon"
                    Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter
                    Property="Background" 
                    TargetName="templateRoot"
                    Value="{DynamicResource Control.MouseOver}"/>
                <Setter 
                    Property="BorderBrush" 
                    TargetName="templateRoot" 
                    Value="{DynamicResource Control.Border.Default}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter 
                    Property="TextElement.Foreground" 
                    TargetName="templateRoot" 
                    Value="{DynamicResource Menu.Disabled.Foreground}"/>
                <Setter 
                    Property="Fill" 
                    TargetName="Glyph" 
                    Value="{DynamicResource Menu.Disabled.Foreground}"/>
                <Setter 
                    Property="Fill" 
                    TargetName="RightArrow" 
                    Value="{DynamicResource Menu.Disabled.Foreground}"/>
            </Trigger>
            <Trigger Property="ScrollViewer.CanContentScroll" SourceName="SubMenuScrollViewer" Value="false">
                <Setter 
                    Property="Canvas.Top"
                    TargetName="OpaqueRect" 
                    Value="{Binding VerticalOffset, ElementName=SubMenuScrollViewer}"/>
                <Setter 
                    Property="Canvas.Left" 
                    TargetName="OpaqueRect" 
                    Value="{Binding HorizontalOffset, ElementName=SubMenuScrollViewer}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    
    <Style TargetType="{x:Type MenuItem}">
        <Setter Property="HorizontalContentAlignment" 
                Value="{Binding HorizontalContentAlignment, 
                  RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="VerticalContentAlignment" 
                Value="{Binding VerticalContentAlignment, 
                  RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="Background" Value="{DynamicResource MainBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource Control.Foreground}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource Control.Background}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Template" 
                Value="{DynamicResource {ComponentResourceKey ResourceId=SubmenuItemTemplateKey, 
                TypeInTargetAssembly={x:Type MenuItem}}}"/>
        <Style.Triggers>
            <Trigger Property="Role" Value="TopLevelHeader">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter 
                    Property="Foreground"
                    Value="{DynamicResource Menu.Static.Foreground}"/>
                <Setter 
                    Property="Template" 
                    Value="{DynamicResource {ComponentResourceKey ResourceId=TopLevelHeaderTemplateKey, 
                      TypeInTargetAssembly={x:Type MenuItem}}}"/>
                <Setter 
                    Property="Padding"
                    Value="6,0"/>
            </Trigger>
            
            <Trigger Property="Role" Value="TopLevelItem">
                <Setter 
                    Property="Background" 
                    Value="{DynamicResource Menu.Static.Background}"/>
                <Setter 
                    Property="BorderBrush" 
                    Value="{DynamicResource Menu.Static.Border}"/>
                <Setter 
                    Property="Foreground" 
                    Value="{DynamicResource Menu.Static.Foreground}"/>
                <Setter 
                    Property="Template" 
                    Value="{DynamicResource {ComponentResourceKey ResourceId=TopLevelItemTemplateKey, 
                      TypeInTargetAssembly={x:Type MenuItem}}}"/>
                <Setter Property="Padding" Value="6,0"/>
            </Trigger>
            <Trigger Property="Role" Value="SubmenuHeader">
                <Setter 
                    Property="Template" 
                    Value="{DynamicResource {ComponentResourceKey ResourceId=SubmenuHeaderTemplateKey,
                      TypeInTargetAssembly={x:Type MenuItem}}}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <ItemsPanelTemplate x:Key="MenuItemsPanelTemplate">
        <WrapPanel IsItemsHost="True"/>
    </ItemsPanelTemplate>

    <Style TargetType="{x:Type ContextMenu}">
        <Setter 
            Property="SnapsToDevicePixels"
            Value="True" />
        <Setter 
            Property="OverridesDefaultStyle"
            Value="True" />
        <Setter 
            Property="Grid.IsSharedSizeScope"
            Value="true" />
        <Setter 
            Property="HasDropShadow"
            Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">
                    <Border 
                        x:Name="Border"
                        Background="{DynamicResource Control.Background}"
                        BorderBrush="{DynamicResource Control.AccentColor}"
                        Padding="2"
                        BorderThickness="1">
                        <StackPanel 

                            IsItemsHost="True"
                            KeyboardNavigation.DirectionalNavigation="Cycle" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasDropShadow" Value="true">
                            <Setter 
                                TargetName="Border"
                                Property="Padding"
                                Value="0,3,0,3" />
                            <Setter
                                TargetName="Border"
                                Property="CornerRadius"
                                Value="4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>